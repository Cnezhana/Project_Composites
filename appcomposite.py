# -*- coding: utf-8 -*-
"""AppComposite.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1O1OcE9uh8YnP16H2E2EVamHOxSg4qozk
"""

import numpy as np
import tensorflow as tf
from tensorflow import keras
from flask import Flask, request, render_template
from keras.models import Sequential
from tensorflow.keras import layers
from keras.layers import Dense, Activation
from sklearn.metrics import accuracy_score

app = Flask(__name__, template_folder = 'templates')

model_NN = "model_NN.h5"
html_NN = "index.html"

def set_params(parametr1, parametr2, parametr3, parametr4, parametr5, parametr6, parametr7, parametr8, parametr9, parametr10, parametr11, parametr12):
    print(parametr1, parametr2, parametr3, parametr4, parametr5, parametr6, parametr7, parametr8, parametr9, parametr10, parametr11, parametr12)
    model = keras.models.load_model(model_NN)
    print('done_load')
    mylist = [parametr1, parametr2, parametr3, parametr4, parametr5, parametr6, parametr7, parametr8, parametr9, parametr10, parametr11, parametr12]
    mylist = np.array(mylist)
    mylist = mylist.reshape(1,-1)
    prediction = model.predict(mylist)
    print('done_pred')
    return prediction[0][0]

@app.route('/', methods=['post', 'get'])
@app.route('/index', methods = ['POST', 'GET'])

def app_calculation():
    param_lst = []
    message = ''
    max_num = 5.59174159869754
    min_num = 0.389402605178414
    if request.method == 'GET':
      return render_template(html_NN)

    if request.method == 'POST':
        for i in range(1,13,1):
            param = request.form.get(f'param{i}')
            param_lst.append(float(param))            
        message = set_params(*param_lst)
        message = (message * (max_num - min_num)) + min_num
    return render_template(html_NN, message=message) 
 
app.run()